{"version":3,"file":"static/js/498.07c11a13.chunk.js","mappings":"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","sources":["../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/InputBase/utils.js","../node_modules/@material-ui/core/esm/utils/isMuiElement.js","../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","../node_modules/@material-ui/core/esm/FormControl/FormControl.js","pages/TestRent/TestRent.js","pages/api/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\nexport function isFilled(obj) {\n  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = /*#__PURE__*/React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      visuallyFocused = props.focused,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      size = props.size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"focused\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0],\n      setAdornedStart = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var focused = visuallyFocused !== undefined ? visuallyFocused : _focused;\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: There are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will be displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","import React, { useState,useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FormControl, InputLabel, Select, MenuItem, TextField, Button } from '@material-ui/core';\r\nimport api from '../api';\r\n// import HttpService from '../../utils/httpService'\r\nimport axios from \"axios\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  textField: {\r\n    margin: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst TestRent = () => {\r\n    const baseURL =\r\n    api+ \"api/businesses/rates/\";\r\n\r\n    const userdata = JSON.parse(localStorage.getItem('userdata'));\r\n    // console.log(userdata);\r\n    // const [post, setPost] = React.useState(null);\r\n\r\n  // const [todo, setTodo] = useState(\"\");\r\n\r\n  //reading data from database\r\n  const [results, setresults] = useState([]);\r\n  const[rent, setrent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getresults();\r\n  }, []);\r\n  //get todo list from database\r\n  const getresults = () => {\r\n    axios.get(baseURL+userdata.businessId).then((response) => {\r\n      // console.log(response);\r\n      setresults(response.data.data);\r\n    });\r\n  };\r\n  // console.log(\"results.data\", results);\r\n\r\n  const [tempresults, settempresults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    gettempresults();\r\n  }, []);\r\n  //get todo list from database\r\n  const gettempresults = () => {\r\n    axios.get(api+'api/businesses/'+userdata.businessId).then((response) => {\r\n      console.log(response.data.data.locations);\r\n      settempresults(response.data.data.locations);\r\n      setlocation(response.data.data.locations[0].name);\r\n      setVehicleType(response.data.data.locations[0].vehicleDetails[0].type)\r\n\r\n    });\r\n  };\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"Business Id\",\r\n        field: \"businessId\",\r\n      },\r\n      {\r\n        label: \"location\",\r\n        field: \"location\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Vehicle Type\",\r\n        field: \"vehicleType\",\r\n        width: 270,\r\n      },\r\n      {\r\n        label: \"Vallet Charges\",\r\n        field: \"valletCharges\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Rounding Up To\",\r\n        field: \"roundingUpTo\",\r\n        width: 100,\r\n      },\r\n      {\r\n        label: \"Rent Per Hr\",\r\n        field: \"rentPerHr\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Minimum Charges\",\r\n        field: \"minimumCharges\",\r\n        width: 100,\r\n      },\r\n      {\r\n        label: \"Max Capping?\",\r\n        field: \"maxCapping\",\r\n        sort: \"asc\",\r\n        width: 100,\r\n      },\r\n      {\r\n        label: \"Max Daily Rent\",\r\n        field: \"maxDailyRent\",\r\n        sort: \"asc\",\r\n        width: 100,\r\n      },      {\r\n        label: \"Is Vallet Applicable\",\r\n        field: \"isValletApplicable\",\r\n        sort: \"asc\",\r\n        width: 100,\r\n      },\r\n      {\r\n        label: \"Is Day End Midnight\",\r\n        field: \"isDayEndMidnight\",\r\n        sort: \"asc\",\r\n        width: 100,\r\n      },\r\n    ],\r\n    rows: results,\r\n  };\r\n  const [location, setlocation] = useState('no location found');\r\n  const [vehicleType, setVehicleType] = useState(null);\r\n\r\n  const classes = useStyles();\r\n  // const [vehicleType, setVehicleType] = useState('Car');\r\n  const [entryDateTime, setEntryDateTime] = useState(new Date());\r\n  const [exitDateTime, setExitDateTime] = useState(new Date());\r\n  const [vehicleTypes,setVehicleTypes] = useState([\"Car\"]);\r\n  const handlelocation = (event) => {\r\n    const loc = event.target.value;\r\n    setlocation(loc);\r\n    setVehicleType(vehicleTypes[0]);\r\n  };\r\n\r\n  const handleVehicleType = (event) => {\r\n    const vehicle = event.target.value;\r\n    setVehicleType(vehicle);\r\n  };\r\n  // const selectedLocationData = tempresults.find((location1) => location1.name === location);\r\n  // const vehicleTypes = selectedLocationData ? selectedLocationData.vehicleDetails.map((vehicle) => vehicle.type) : [];\r\n  useEffect(() => {\r\n    const selectedLocationData = tempresults.find((location1) => location1.name === location);\r\n    setVehicleTypes(selectedLocationData ? selectedLocationData.vehicleDetails.map((vehicle) => vehicle.type) : []);\r\n    }, [location]);\r\n  \r\n  const handleEntryDateTimeChange = (event) => {\r\n    const selectedDate = new Date(event.target.value);\r\n    selectedDate.setHours(selectedDate.getHours() - 6);\r\n    selectedDate.setMinutes(selectedDate.getMinutes() - 30);\r\n    setEntryDateTime(selectedDate);\r\n  };\r\n  \r\n  const handleExitDateTimeChange = (event) => {\r\n    const selectedDate = new Date(event.target.value);\r\n    selectedDate.setHours(selectedDate.getHours() - 6);\r\n    selectedDate.setMinutes(selectedDate.getMinutes() - 30);\r\n    setExitDateTime(selectedDate);\r\n  };\r\n  \r\n\r\n  const handleRentCalculation = () => {\r\n    // Call rent calculation function with selected vehicle type and date/time inputs\r\n    const parkingTicketDb = {\r\n        isRentBasis: true,\r\n        entryDateTime: entryDateTime,\r\n        exitDateTime: exitDateTime,\r\n        isValletApplicable: false\r\n        };\r\n        const rateStructureDb = results.find(obj => obj['vehicleType'] === vehicleType && obj['location'] === location);\r\n        console.log('rate Structure',rateStructureDb);\r\n        setrent(rentCalculus(rateStructureDb, parkingTicketDb));\r\n        console.log(rent);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        {/* <InputLabel id=\"vehicle-type-label\">Vehicle Type</InputLabel> */}\r\n        {/* <select labelId=\"vehicle-type-label\" id=\"vehicle-type-select\" value={vehicleType} onChange={handleVehicleTypeChange}>\r\n          <option value=\"Car\">Car</option>\r\n          <option value=\"Bike\">Bike</option>\r\n          <option value=\"3 wheeler\">3 Weeler</option>\r\n        </select> */}\r\n\r\n<div className=\"formInput\">\r\n                <label>Select Location</label>\r\n\r\n                <select id=\"locationSelect\" onChange={handlelocation}>\r\n                {/* <option value=\"\">{results[0].name}</option> */}\r\n                {tempresults.map((location) => (\r\n                  <option value={location.name}>{location.name}</option>\r\n                ))}\r\n              </select>\r\n                </div>\r\n\r\n\r\n                {location && (\r\n                  <div className=\"formInput\">\r\n                    <label>Select a vehicle type:</label>\r\n                    <select id=\"vehicleTypeSelect\" onChange={handleVehicleType}>\r\n                      {/* <option value=\"\">Select a vehicle type</option> */}\r\n                      {vehicleTypes.map((type) => (\r\n                        <option key={type} value={type}>{type}</option>\r\n                      ))}\r\n                    </select>\r\n                    {/* {selectedVehicleType && (\r\n                      <p>You have selected: {selectedVehicleType}</p>\r\n                    )} */}\r\n                  </div>\r\n                )}\r\n      </FormControl>\r\n      <br />\r\n      <span>Entry Date and Time: </span>\r\n      <br/>\r\n      <input type=\"datetime-local\" id=\"datetimeInput\" onChange={handleEntryDateTimeChange} />\r\n      <br />\r\n      <span>Entry Date and Time: </span>\r\n      <br/>\r\n      <input type=\"datetime-local\" id=\"datetimeInput\" onChange={handleExitDateTimeChange} />\r\n      <br/><br />\r\n      <button onClick={handleRentCalculation}>Calculate Rent</button>\r\n      {rent? (<div>\r\n      <p>Total Rent: {rent.totalRent}</p>\r\n      <p>Per Hour Rent: {rent.perHrRent}</p>\r\n      <p>Valet Charges: {rent.valletCharges}</p>\r\n      <p>Total Time (in hours): {rent.totalTimeHr}</p>\r\n    </div>):(null)\r\n      }\r\n    </div>\r\n  );\r\n};\r\nfunction calculateRoundedHourDifference(startDate, endDate) {\r\n  const start = new Date(startDate);\r\n  const end = new Date(endDate);\r\n\r\n  const timeDiffInMilliseconds = Math.abs(end - start);\r\n  const hoursDiff = Math.ceil(timeDiffInMilliseconds / (1000 * 60 * 60));\r\n\r\n  return hoursDiff;\r\n}\r\n\r\nfunction rentCalculus(rateStructureDb, parkingTicketDb){\r\n    if(parkingTicketDb.isRentBasis){\r\n      // console.log(parkingTicketDb.exitDateTime?parkingTicketDb.exitDateTime.getTime():0)\r\n      // console.log(parkingTicketDb.entryDateTime.getTime())\r\n      \r\n      // let parkedtimeInHr = Math.ceil(((parkingTicketDb.exitDateTime?parkingTicketDb.exitDateTime.getTime(): new Date().getTime()) - parkingTicketDb.entryDateTime.getTime())/3600000 | 1); //createdAt\r\n      let start = parkingTicketDb.entryDateTime;\r\n      let end  = parkingTicketDb.exitDateTime?parkingTicketDb.exitDateTime: new Date();\r\n      let parkedtimeInHr = calculateRoundedHourDifference(start,end);\r\n      \r\n        let totalRent = 0\r\n        let dayRent = 0\r\n        let hrRent = 0\r\n        let timeInHr = parkedtimeInHr\r\n        if(!rateStructureDb.isDayEndMidnight && parkedtimeInHr>24 && rateStructureDb.maxCapping){\r\n            dayRent = Math.floor(parkedtimeInHr/24) * rateStructureDb.maxDailyRent\r\n            timeInHr = parkedtimeInHr%24\r\n        } \r\n        \r\n        hrRent = (rateStructureDb.rentPerHr*timeInHr)\r\n        \r\n        hrRent = hrRent < rateStructureDb.minimumCharges ? rateStructureDb.minimumCharges: hrRent\r\n        hrRent = rateStructureDb.maxCapping && hrRent > rateStructureDb.maxDailyRent? rateStructureDb.maxDailyRent: hrRent  \r\n        \r\n        totalRent = (dayRent + hrRent) + (parkingTicketDb.isValletApplicable && rateStructureDb.isValletApplicable ? rateStructureDb.valletCharges :0)\r\n        \r\n        totalRent = Math.ceil(totalRent / rateStructureDb.roundingUpTo) * rateStructureDb.roundingUpTo   \r\n        \r\n        \r\n        return {\r\n            totalRent: totalRent,\r\n            perHrRent: rateStructureDb.rentPerHr, \r\n            valletCharges: parkingTicketDb.isValletApplicable && rateStructureDb.isValletApplicable ? rateStructureDb.valletCharges :0,\r\n            totalTimeHr: parkedtimeInHr            \r\n        }\r\n    }\r\n    else return {\r\n        totalRent: rateStructureDb.maxDailyRent        \r\n    }\r\n\r\n}\r\n\r\nexport default TestRent;\r\n","// const baseURL = 'https://parking-management-service-804561330.development.catalystserverless.com/server/parking-management-service/';\r\n// const baseURL = 'http://localhost:5001/';\r\nconst baseURL = '/server/parking-management-service/';\r\n// const baseURL = 'http://parking-clip.com/server/parking-management-service/';\r\n// const baseURL = 'http://192.168.0.103:5001/';\r\n// const baseURL = 'http://localhost:3000/server/parking-management-service/';\r\nexport default baseURL;"],"names":["stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","hasValue","value","Array","isArray","isMuiElement","element","muiNames","React","indexOf","type","muiName","FormControlContext","FormControl","props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$disabled","disabled","_props$error","error","_props$fullWidth","fullWidth","visuallyFocused","focused","_props$hiddenLabel","hiddenLabel","_props$margin","margin","_props$required","required","size","_props$variant","variant","other","_objectWithoutProperties","_React$useState","initialAdornedStart","child","input","startAdornment","adornedStart","setAdornedStart","_React$useState2","initialFilled","obj","SSR","defaultValue","isFilled","filled","setFilled","_React$useState3","_focused","setFocused","onFilled","childContext","onBlur","onEmpty","onFocus","registerEffect","clsx","root","concat","capitalize","withStyles","display","flexDirection","position","minWidth","padding","border","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","width","name","useStyles","makeStyles","theme","formControl","spacing","textField","button","baseURL","api","userdata","JSON","parse","localStorage","getItem","_useState","useState","_useState2","_slicedToArray","results","setresults","_useState3","_useState4","rent","setrent","useEffect","getresults","axios","businessId","then","response","data","_useState5","_useState6","tempresults","settempresults","gettempresults","console","log","locations","setlocation","setVehicleType","vehicleDetails","_useState7","_useState8","location","_useState9","_useState10","vehicleType","_useState11","Date","_useState12","entryDateTime","setEntryDateTime","_useState13","_useState14","exitDateTime","setExitDateTime","_useState15","_useState16","vehicleTypes","setVehicleTypes","selectedLocationData","find","location1","map","vehicle","_jsxs","_jsx","id","onChange","event","loc","target","selectedDate","setHours","getHours","setMinutes","getMinutes","onClick","parkingTicketDb","isRentBasis","isValletApplicable","rateStructureDb","parkedtimeInHr","startDate","endDate","start","end","timeDiffInMilliseconds","Math","abs","ceil","calculateRoundedHourDifference","totalRent","dayRent","hrRent","timeInHr","isDayEndMidnight","maxCapping","floor","maxDailyRent","rentPerHr","minimumCharges","valletCharges","roundingUpTo","perHrRent","totalTimeHr","rentCalculus"],"sourceRoot":""}