{"version":3,"file":"static/js/955.0389233f.chunk.js","mappings":"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","sources":["pages/api/index.js","pages/generateTicket/GenerateTicket.js"],"sourcesContent":["// const baseURL = 'https://parking-management-service-804561330.development.catalystserverless.com/server/parking-management-service/';\r\n// const baseURL = 'http://localhost:5001/';\r\nconst baseURL = '/server/parking-management-service/';\r\n// const baseURL = 'http://parking-clip.com/server/parking-management-service/';\r\n// const baseURL = 'http://192.168.0.103:5001/';\r\n// const baseURL = 'http://localhost:3000/server/parking-management-service/';\r\nexport default baseURL;","import \"./GenerateTicket.css\";\r\nimport { useEffect, useState , useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport api from '../api';\r\n// import Quagga from \"quagga\";\r\nimport { QrReader } from 'react-qr-reader';\r\nimport Webcam from 'react-webcam';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@material-ui/core';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport {\r\n  Alert,\r\n} from '@mui/material';\r\nconst GenerateTicket = () => {\r\n  var [date, setDate] = useState(new Date());\r\n  const [resultData, setresultData] = useState(\"\");\r\n  const userdata = JSON.parse(localStorage.getItem('userdata'));\r\n  const [mobileNo, setMobileNo] = useState(\"\");\r\n  const [vehicleType, setVehicleType] = useState(\"Car\");\r\n  const [vehicleRegistrationNo, setVehicleRegistrationNo] = useState(\"\");\r\n  const [message, setMessage] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const [valletCharges, setvalletCharges] = useState(0);\r\n  const [isValletApplicable, setisValletApplicable] = useState(false);\r\n\r\n  const handlevalletCharges = (event) => {\r\n    const valletCharges = event.target.value;\r\n    setvalletCharges(valletCharges);\r\n  };\r\n\r\n  const handleisValletApplicable = (event) => {\r\n    const isValletApplicable = event.target.value;\r\n    setisValletApplicable(isValletApplicable);\r\n  };\r\n\r\n\r\n  const navigate = useNavigate();\r\n  const handleVehicleRegistrationNo = (event) => {\r\n    const vehicleRegistrationNo = event.target.value;\r\n    setVehicleRegistrationNo(vehicleRegistrationNo);\r\n  };\r\n\r\n  const handleMobileNo = (event) => {\r\n    const mobileNo = event.target.value;\r\n    setMobileNo(mobileNo);\r\n  };\r\n\r\n  const handleVehicleType = (event) => {\r\n    const vehicleType = event.target.value;\r\n    setVehicleType(vehicleType);\r\n  };\r\n  function removeWhitespace(str) {\r\n    return str.replace(/\\s/g, \"\");\r\n  }\r\n  const localdata = JSON.parse(localStorage.getItem('userdata'));\r\n  const submitUser = async (e) => {\r\n    // console.log(localdata);\r\n    e.preventDefault();\r\n    const userdata = {\r\n      attendantId: localdata.userId,\r\n      vehicleType: vehicleType,\r\n      mobileNo: mobileNo,\r\n      vehicleRegistrationNo: removeWhitespace(vehicleRegistrationNo),\r\n      isValletApplicable: isValletApplicable,\r\n      valletNumber: valletCharges,\r\n    };\r\n    console.log(\"sending data: \", userdata);\r\n    try{\r\n      setMessage('');\r\n      setErrorMsg('');\r\n      await axios\r\n      .post(\r\n        api+ \"api/parkings/vehicle/generateTicket\",\r\n        userdata\r\n      )\r\n      .then((result) => {\r\n        console.log('response',result.data);\r\n\r\n        setresultData(result.data);\r\n        setMessage(result.data.message);\r\n        // window.location.reload(false);\r\n\r\n      });      \r\n    }\r\n    catch (error) {\r\n      setErrorMsg(error.response.data.message);\r\n      console.error(\"error\",error.response.data.message);\r\n  }\r\n\r\n      setQrData('');\r\n  };\r\n    useEffect(() => {\r\n    var timer = setInterval(() => setDate(new Date()), 1000);\r\n    return function cleanup() {\r\n      clearInterval(timer);\r\n    };\r\n  });\r\n  const [isScanning, setIsScanning] = useState(false);\r\n  // console.log(resultData);\r\n  const handleScan = async (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"scan\",isScanning);\r\n    setIsScanning(true);\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error(err);\r\n  };\r\n  const [qrData, setQrData] = useState('');\r\n  const handleScanResult =  (result) => {\r\n    // console.log('qrdata: ', qrData);\r\n    if(qrData=='' && result)\r\n    {\r\n        setQrData(JSON.parse(result));\r\n        var data = JSON.parse(result);\r\n        setMobileNo(data.mobileNo);\r\n        setVehicleRegistrationNo(data.vehicleRegistrationNo);\r\n        setVehicleType(data.vehicleType);\r\n        setIsScanning(false);   \r\n        // console.log('Name:', mobileNo, 'isScanning:', isScanning);\r\n    }\r\n  };\r\n\r\n  const [stream, setStream] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n  const videoRef = useRef(null);\r\n  const webcamRef = useRef(null);\r\n\r\n  const handleStartCamera = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n    setStream(stream);\r\n    videoRef.current.srcObject = stream;\r\n    videoRef.current.play();\r\n  };\r\n\r\n  const handleTakePicture = () => {\r\n    // console.log(stream);\r\n    const capturedImage = webcamRef.current.getScreenshot();\r\n    console.log(capturedImage);\r\n    setImage(capturedImage);\r\n    setStream(null);\r\n    handlePostImage(capturedImage);\r\n  };\r\n\r\n  const handlePostImage = async (image) => {\r\n    // console.log(image);\r\n    const imageFile = dataURLtoFile(image);\r\n    // console.log(imageFile);\r\n    const formData = new FormData();\r\n    formData.append('file', imageFile);\r\n    console.log(formData); console.log(\"hi\"); \r\n    fetch('https://anpr-api.pushpak.cloud/api/v1/plate_number', {\r\n        method: 'POST',\r\n        body: formData\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        const dataOutput = data.plate_number\r\n        if (dataOutput === \"\") {\r\n            handleStartCamera();\r\n            setImage(null);\r\n            setErrorMsg(\"No LPN Detected, Please Retry again!!\");\r\n            console.log(\"No LPN Detected\");\r\n        } else {\r\n            console.log(dataOutput);\r\n            setImage(null);\r\n            // setMessage(\"Read Sucessfull\");\r\n            // setErrorMsg('');\r\n            setVehicleRegistrationNo(dataOutput);\r\n        }\r\n        // document.getElementById(\"uploadBtn\").disabled = false;\r\n    });\r\n  };\r\n\r\n\r\n  function dataURLtoFile(dataUrl) {\r\n    const base64Data = dataUrl.split(',')[1];\r\n    const fileType = dataUrl.split(';')[0].split('/')[1];\r\n    const binaryData = atob(base64Data);\r\n    const arrayBuffer = new ArrayBuffer(binaryData.length);\r\n    const uint8Array = new Uint8Array(arrayBuffer);\r\n    for (let i = 0; i < binaryData.length; i++) {\r\n      uint8Array[i] = binaryData.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([uint8Array], { type: `image/${fileType}` });\r\n    const fileName = `image_${Date.now()}.${fileType}`;\r\n    const file = new File([blob], fileName, { type: `image/${fileType}` });\r\n    return file;\r\n  }\r\n  const [results, setresults] = useState([]);\r\n  const [location, setlocation] = useState('no location found');\r\n\r\n  useEffect(() => {\r\n    getresults();\r\n  }, []);\r\n  //get todo list from database\r\n  const getresults = () => {\r\n    axios.get(api+'api/businesses/'+localdata.businessId).then((response) => {\r\n      // console.log(response.data.data.locations);\r\n      setresults(response.data.data.locations);\r\n      setlocation(response.data.data.locations[0].name);\r\n    });\r\n  };\r\n\r\n  const selectedLocationData = results.find((location1) => location1.name === localdata.location);\r\n  // console.log(selectedLocationData);\r\n  const vehicleTypes = selectedLocationData ? selectedLocationData.vehicleDetails.map((vehicle) => vehicle.type) : [];\r\n  // console.log(vehicleTypes);\r\n  const [torchMode, setTorchMode] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const printqr = async () => {\r\n    console.log(resultData.data.vehicleRegistrationNo);\r\n    axios.get(api+'api/commons/vehicles/qrcode/'+resultData.data.vehicleRegistrationNo)\r\n    .then(response => {\r\n      // console.log(response.data);\r\n      printing(response.data);\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n    // try {\r\n\r\n    //   const response = await fetch();\r\n    //   console.log(response);\r\n    // } catch (error) {\r\n    //   console.error('Error fetching image data URL:', error);\r\n    // }\r\n  };\r\n  function printing(data) {\r\n    const printWindow = window.open();\r\n    const img = new Image();\r\n    img.onload = function() {\r\n      printWindow.document.write(`<img src=\"${data}\" />`);\r\n      printWindow.print();\r\n      printWindow.close();\r\n    };\r\n    img.src = data;\r\n  }\r\n  useEffect(() => {\r\n    if (message !== '') {\r\n      setOpen(true);\r\n    }\r\n  }, [message]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    window.location.reload(); // Reload the page\r\n  };\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"homeContainer\">\r\n        <div className=\"body\">\r\n          <div className=\"formContainer\">\r\n            <h3>Generate Parking Ticket</h3>\r\n            <form>\r\n            {/* {message!=='' && <Alert severity=\"success\">{message}</Alert>} */}\r\n            {errorMsg!=='' && <Alert severity=\"error\">{errorMsg}</Alert>}\r\n\r\n    {/* <div> */}\r\n      <Dialog open={open} onClose={handleClose}>\r\n        {/* <DialogTitle>Modal Title</DialogTitle> */}\r\n        <DialogContent>\r\n          <p>{message}</p>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Generate Another ticket\r\n          </Button>          \r\n          \r\n          <Button  onClick={() => printqr()} color=\"primary\">\r\n            Print  QR\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    {/* </div> */}\r\n              <div className=\"formInput\">\r\n                <label>Parking Location</label>\r\n                <input\r\n                  disabled={true}\r\n                  style={{ backgroundColor: \"lightgrey\", color: \"#000000\" }}\r\n                  type=\"Text\"\r\n                  value={userdata.location}\r\n                />\r\n              </div>\r\n              {/* <div style={{ width: \"100%\" }} className=\"formInput\">\r\n                <label>Ticket number</label>\r\n                <input\r\n                  disabled={true}\r\n                  style={{ backgroundColor: \"lightgrey\", color: \"#000000\" }}\r\n                  type=\"Text\"\r\n                  placeholder={\"A123456\"}\r\n                />\r\n              </div> */}\r\n              \r\n              <div className=\"formInput\">\r\n                <label>Entry date & time</label>\r\n                <input\r\n                  disabled={true}\r\n                  style={{ backgroundColor: \"lightgrey\", color: \"#000000\" }}\r\n                  type=\"Text\"\r\n                  value={date.toDateString() +\" \"+ date.toLocaleTimeString()}\r\n                />\r\n              </div>\r\n              {/* <div className=\"formInput\">\r\n                <label>Entry time</label>\r\n                <input\r\n                  disabled={true}\r\n                  style={{ backgroundColor: \"lightgrey\", color:\"#000000\"}}\r\n                  type=\"Text\"\r\n                  value={date.toLocaleTimeString()}\r\n                />\r\n              </div> */}\r\n              {/* <h6 style={{ width: \"100%\", marginTop: 0, marginBottom: 0}}>Details*</h6> */}\r\n              <div style={{ width: \"100%\", float: 'left', flexDirection: \"row\"}}>\r\n                <button style={{width: '47%'}} onClick={handleScan}>Scan QR Code</button>              \r\n                {isScanning && (\r\n                  <QrReader\r\n                  delay={1000}\r\n                  constraints={ {facingMode: 'environment'} }\r\n                  onError={handleError}\r\n                  onResult={handleScanResult}\r\n                  style={{ width: '100%' }}\r\n                />\r\n                )}\r\n                {stream === null ? (\r\n                  <button style={{width: '47%', marginLeft: '5%'}} onClick={handleStartCamera}>Scan Number Plate</button>\r\n                ) : (\r\n                  <div>\r\n                    <Webcam\r\n                      audio={false}\r\n                      ref={webcamRef}\r\n                      screenshotFormat=\"image/jpeg\"\r\n                        videoConstraints={{\r\n                        facingMode: \"environment\",\r\n                        width: '80%',\r\n                        torch: torchMode\r\n                      }}\r\n                      className=\"webcam\"\r\n                    />\r\n                    <div>\r\n                    {/* <button onClick={() => setTorchMode(!torchMode)}>Toggle Torch</button> */}\r\n                    <button onClick={handleTakePicture}>Take picture</button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {/* {image !== null && (\r\n                  <div>\r\n                    <img src={image} alt=\"captured\" />\r\n                    <div>\r\n                    <button onClick={handlePostImage}>Scan the image</button>\r\n                    </div>\r\n                  </div>                 \r\n                )} */}\r\n              </div>\r\n              <div className=\"formInput\">\r\n                    <label>Select a vehicle type:</label>\r\n                    <select id=\"vehicleTypeSelect\" onChange={handleVehicleType}>\r\n                      {/* <option value=\"\">Select a vehicle type</option> */}\r\n                      {vehicleTypes.map((type) => (\r\n                        <option key={type} value={type}>{type}</option>\r\n                      ))}\r\n                    </select>\r\n                    {/* {selectedVehicleType && (\r\n                      <p>You have selected: {selectedVehicleType}</p>\r\n                    )} */}\r\n                  </div>\r\n              <div className=\"formInput\">\r\n                <label>Vehicle number</label>\r\n                <input id=\"vehicleRegistrationNo\"\r\n                  value={vehicleRegistrationNo}\r\n                  onChange={(e) => setVehicleRegistrationNo(e.target.value)}\r\n                  type=\"Text\"\r\n                  // placeholder={\"MH14PQ3603\"}\r\n                />\r\n              </div>\r\n              <div style={{ width: \"100%\" }} className=\"formInput\">\r\n                <label>Contact Number</label>\r\n                <input\r\n                required\r\n                value={mobileNo}\r\n                id=\"mobileNo\"\r\n                  onChange={(e) => setMobileNo(e.target.value)}\r\n                  style={{\r\n                    padding: \"8px\",\r\n                    border: \"1px solid gray\",\r\n                    borderRadius: \"5px\",\r\n                    height: \"auto\",\r\n                  }}\r\n                  type='tel'\r\n                  // placeholder={\"+91 1234567890\"}\r\n                />\r\n              </div>\r\n              {/* <FormControl style={{width: \"48%\"}}>\r\n                <FormLabel id=\"demo-row-radio-buttons-group-label\">Vallet Service?</FormLabel>\r\n                <RadioGroup\r\n                    row\r\n                    aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                    name=\"row-radio-buttons-group\"\r\n                    defaultValue={false}\r\n                >\r\n                    <FormControlLabel value=\"true\" control={<Radio />} label=\"Yes\" />\r\n                    <FormControlLabel value=\"false\" control={<Radio />} label=\"No\" />\r\n                </RadioGroup>\r\n            </FormControl> */}\r\n\r\n            \r\n<FormControl style={{width: \"48%\"}}>\r\n                <FormLabel id=\"demo-row-radio-buttons-group-label\">Allow Vallet Services??</FormLabel>\r\n                <RadioGroup\r\n                    row\r\n                    aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                    name=\"row-radio-buttons-group\"\r\n                    onChange={(e) => handleisValletApplicable(e)}\r\n                    defaultValue=\"false\"\r\n                >\r\n                    <FormControlLabel value=\"true\" control={<Radio />} label=\"Yes\" />\r\n                    <FormControlLabel value=\"false\" control={<Radio />} label=\"No\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n            {isValletApplicable==\"true\"?(              <div className=\"formInput\">\r\n                <label>Vallet Number</label>\r\n                <input required \r\n                  onChange={(e) => handlevalletCharges(e)}\r\n                  type={Text}\r\n                  // placeholder={\"Rs. \"}\r\n                />\r\n              </div>):(null)}\r\n\r\n            {/* <FormControl style={{width: \"48%\"}}>\r\n                <FormLabel id=\"demo-row-radio-buttons-group-label\">Ticket Mode</FormLabel>\r\n                <RadioGroup\r\n                    row\r\n                    aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                    name=\"row-radio-buttons-group\"\r\n                    defaultValue={false}\r\n                >\r\n                    <FormControlLabel value=\"true\" control={<Radio />} label=\"Entry Basis\" />\r\n                    <FormControlLabel value=\"false\" control={<Radio />} label=\"Rental Basis\" />\r\n                </RadioGroup>\r\n            </FormControl> */}\r\n            <div style={{alignItems: 'center', justifyContent: 'center', width: '100%', display: 'flex'}}>\r\n            <button onClick={submitUser}>Generate a Ticket</button>\r\n            </div>\r\n              \r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default GenerateTicket;\r\n"],"names":["_useState","useState","Date","_useState2","_slicedToArray","date","setDate","_useState3","_useState4","resultData","setresultData","userdata","JSON","parse","localStorage","getItem","_useState5","_useState6","mobileNo","setMobileNo","_useState7","_useState8","vehicleType","setVehicleType","_useState9","_useState10","vehicleRegistrationNo","setVehicleRegistrationNo","_useState11","_useState12","message","setMessage","_useState13","_useState14","errorMsg","setErrorMsg","_useState15","_useState16","valletCharges","setvalletCharges","_useState17","_useState18","isValletApplicable","setisValletApplicable","useNavigate","localdata","submitUser","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","attendantId","userId","str","replace","valletNumber","console","log","axios","api","then","result","data","t0","response","error","setQrData","stop","_x","apply","arguments","useEffect","timer","setInterval","clearInterval","_useState19","_useState20","isScanning","setIsScanning","handleScan","_ref2","_callee2","_context2","_x2","_useState21","_useState22","qrData","_useState23","_useState24","stream","setStream","_useState25","_useState26","setImage","videoRef","useRef","webcamRef","handleStartCamera","_ref3","_callee3","_context3","navigator","mediaDevices","getUserMedia","video","sent","current","srcObject","play","handlePostImage","_ref4","_callee4","image","imageFile","formData","_context4","dataURLtoFile","FormData","append","fetch","method","body","json","dataOutput","plate_number","_x3","dataUrl","base64Data","split","fileType","binaryData","atob","arrayBuffer","ArrayBuffer","length","uint8Array","Uint8Array","i","charCodeAt","blob","Blob","type","concat","fileName","now","File","_useState27","_useState28","results","setresults","_useState29","_useState30","setlocation","getresults","businessId","locations","name","selectedLocationData","find","location1","location","vehicleTypes","vehicleDetails","map","vehicle","_useState31","_useState32","torchMode","_useState33","_useState34","open","setOpen","printqr","_ref5","_callee5","_context5","printing","catch","printWindow","window","img","Image","onload","document","write","print","close","src","handleClose","reload","_jsx","className","children","_jsxs","Alert","severity","Dialog","onClose","DialogContent","DialogActions","Button","onClick","color","disabled","style","backgroundColor","value","toDateString","toLocaleTimeString","width","float","flexDirection","QrReader","delay","constraints","facingMode","onError","err","onResult","marginLeft","Webcam","audio","ref","screenshotFormat","videoConstraints","torch","capturedImage","getScreenshot","id","onChange","event","target","required","padding","border","borderRadius","height","FormControl","FormLabel","RadioGroup","row","handleisValletApplicable","defaultValue","FormControlLabel","control","Radio","label","handlevalletCharges","Text","alignItems","justifyContent","display"],"sourceRoot":""}